"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[559],{4852:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(9231);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(r),f=o,d=u["".concat(s,".").concat(f)]||u[f]||m[f]||a;return r?n.createElement(d,l(l({ref:t},p),{},{components:r})):n.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5711:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(5907),o=(r(9231),r(4852));const a={description:"Generate membership zk proofs",sidebar_position:4},l="Generate Proofs",i={unversionedId:"long/generate-zk-proof",id:"long/generate-zk-proof",title:"Generate Proofs",description:"Generate membership zk proofs",source:"@site/docs/long/generate-zk-proof.md",sourceDirName:"long",slug:"/long/generate-zk-proof",permalink:"/e2e-zk-ecdsa/docs/long/generate-zk-proof",draft:!1,editUrl:"https://github.com/privacy-scaling-explorations/tree/main/docs/docs/docs/long/generate-zk-proof.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Generate membership zk proofs",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create Proof Request",permalink:"/e2e-zk-ecdsa/docs/long/create-proof-request"},next:{title:"Verify Proofs",permalink:"/e2e-zk-ecdsa/docs/long/verify"}},s={},c=[{value:"Remote",id:"remote",level:2},{value:"Local",id:"local",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generate-proofs"},"Generate Proofs"),(0,o.kt)("p",null,"Once you have a proof request, you can generate a proof either locally or by relying on our remote proof server."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Server"),(0,o.kt)("th",{parentName:"tr",align:null},"Pros"),(0,o.kt)("th",{parentName:"tr",align:null},"Cons"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Remote"),(0,o.kt)("td",{parentName:"tr",align:null},"No need to install circom or snarkjs. Faster"),(0,o.kt)("td",{parentName:"tr",align:null},"You need to trust our server with your privacy")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Local"),(0,o.kt)("td",{parentName:"tr",align:null},"Trustless"),(0,o.kt)("td",{parentName:"tr",align:null},'You need to install circom and snarkjs. Slower. Need to tweak system partitions to allow for more swap memory on "regular" machines.')))),(0,o.kt)("h2",{id:"remote"},"Remote"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const jobId = await proofRequest.submit()\n")),(0,o.kt)("h2",{id:"local"},"Local"),(0,o.kt)("p",null,"You'll need the circom generated files. You can either re-generate them yourself or download them from our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/privacy-scaling-explorations/e2e-zk-ecdsa/tree/main/apis/proving/generated"},"github repo"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { execSync, readFileSync, writeFileSync } from 'fs'\n\nconst circuitInput = new CircuitInput(proofRequest)\n\nexecSync('node ./generate_witness.js ./main.wasm ./input.json ./witness.wtns')\nexecSync(\n  'snarkjs groth16 prove ./circuit_0001.zkey ./witness.wtns ./proof.json ./public.json',\n)\n\nconst proof = JSON.parse(fs.readFileSync('./proof.json', 'utf8'))\nconst publicSignals = JSON.parse(fs.readFileSync('./public.json', 'utf8'))\n")))}m.isMDXComponent=!0}}]);