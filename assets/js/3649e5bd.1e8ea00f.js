"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[295],{4852:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(9231);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(i,".").concat(u)]||d[u]||f[u]||o;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:a,s[1]=c;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(5907),a=(n(9231),n(4852));const o={description:"Fetch list of addresses from public on chain data",sidebar_position:2},s="Anonymity Set",c={unversionedId:"long/anonset",id:"long/anonset",title:"Anonymity Set",description:"Fetch list of addresses from public on chain data",source:"@site/docs/long/anonset.md",sourceDirName:"long",slug:"/long/anonset",permalink:"/e2e-zk-ecdsa/docs/long/anonset",draft:!1,editUrl:"https://github.com/privacy-scaling-explorations/tree/main/docs/docs/docs/long/anonset.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Fetch list of addresses from public on chain data",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/e2e-zk-ecdsa/docs/long/setup"},next:{title:"Create Proof Request",permalink:"/e2e-zk-ecdsa/docs/long/create-proof-request"}},i={},p=[],l={toc:p},d="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"anonymity-set"},"Anonymity Set"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://anonset.fly.dev/"},"https://anonset.fly.dev/"),' provides endpoints to fetch on chain "',(0,a.kt)("strong",{parentName:"p"},"anonymity sets"),'".',(0,a.kt)("br",{parentName:"p"}),"\n","It reads public ethereum data already indexed by different services (",(0,a.kt)("a",{parentName:"p",href:"https://dune.com/"},"dune"),", ",(0,a.kt)("a",{parentName:"p",href:"https://thegraph.com/"},"the graph"),", google bigquery's ",(0,a.kt)("inlineCode",{parentName:"p"},"crypto_ethereum")," dataset) to aggregate lists of addresses that match different requirements."),(0,a.kt)("p",null,"For instance, you can get the list of addresses that own at least ",(0,a.kt)("strong",{parentName:"p"},"3000")," of the ",(0,a.kt)("strong",{parentName:"p"},"ENS")," ERC20 with address ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72"))," as of the latest block: ",(0,a.kt)("a",{parentName:"p",href:"https://anonset.fly.dev/balance/ERC20?tokenAddress=0xc18360217d8f7ab5e7c516566761ea12ce7f9d72&min=3000"},"https://anonset.fly.dev/balance/ERC20?tokenAddress=0xc18360217d8f7ab5e7c516566761ea12ce7f9d72&min=3000")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const tokenAddress = '0xc18360217d8f7ab5e7c516566761ea12ce7f9d72'\nconst min = 3000\nconst ANON_SET_API = 'https://anonset.fly.dev'\n\nconst params = new URLSearchParams({ min, tokenAddress })\n\nconst addresses = await fetch(\n  `${ANON_SET_API}/balance/ERC20?${params.toString()}`,\n).then((res) => res.json())\n")))}f.isMDXComponent=!0}}]);